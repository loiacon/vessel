#!/bin/bash
#
# Get all Pull Requests head branches, perform a 'git checkout' command
# into those head branches and then run all automated tests.

# Unofficial Bash Strict Mode
set -e
set -u
set -o pipefail
IFS=$'\n\t'

# Imports
# source ../add.sh

# Vars

function install_lemp_stack() {

  #####################################
  # Install Homebrew if isn't present
  #####################################

  if command -v brew>/dev/null; then
    brew update && brew cleanup
  else
    /usr/bin/ruby -e "$(curl -fsSL https://bit.ly/1LEgSWs)"
  fi

  #####################################
  # Install PHP
  #####################################

  brew install php
  sudo pecl install mongodb
  sudo pecl install xdebug-2.7.0beta1

  #####################################
  # Install MongoDB
  #####################################

  brew install mongodb

  #####################################
  # Install MySQL
  #####################################

  brew install mysql

  #####################################
  # Install NGINX
  #####################################

  brew install nginx
  sed -i '' 's/8080/80/g' /usr/local/etc/nginx/nginx.conf

  #####################################
  # Install Redis
  #####################################

  brew install redis

  #####################################
  # Install dnsmasq
  #####################################

  brew install dnsmasq

  # Configure dnsmasq
  sudo echo "address=/dev/127.0.0.1" >> /usr/local/etc/dnsmasq.conf

  # Configure OSX
  sudo echo "nameserver 127.0.0.1" >> /etc/resolver/dev

  #####################################
  # Starting services
  #####################################

  brew services restart php
  brew services restart mysql
  brew services restart mongodb
  brew services restart redis
  sudo brew services restart dnsmasq
  sudo brew services restart nginx

  #####################################
  # Listing the running services
  #####################################

  brew services list

  exit 0
}

function remove_lemp_stack() {

  #####################################
  # Uninstall PHP
  #####################################

  if brew ls --versions php > /dev/null; then
    sudo pecl uninstall mongodb
    sudo pecl uninstall xdebug-2.7.0beta1
    brew uninstall php

    sudo rm -rf /etc/php-fpm.d
    sudo rm -rf /usr/local/etc/php
  else
    echo "PHP is not installed"
  fi

  #####################################
  # Uninstall MongoDB
  #####################################

  if brew ls --versions mongodb > /dev/null; then
    brew uninstall mongodb
  else
    echo "MongoDB is not installed"
  fi

  #####################################
  # Uninstall MySQL
  #####################################

  if brew ls --versions mysql > /dev/null; then
    brew uninstall mysql
  else
    echo "MySQL is not installed"
  fi

  #####################################
  # Uninstall NGINX
  #####################################

  if brew ls --versions nginx > /dev/null; then
    brew uninstall nginx

    sudo rm -rf /usr/local/etc/nginx
  else
    echo "NGINX is not installed"
  fi

  #####################################
  # Uninstall Redis
  #####################################

  if brew ls --versions redis > /dev/null; then
    brew uninstall redis
  else
    echo "Redis is not installed"
  fi

  #####################################
  # Uninstall DNSMasq
  #####################################

  if brew ls --versions dnsmasq > /dev/null; then
    brew uninstall dnsmasq

    sudo rm -rf /usr/local/etc/dnsmasq.conf
    sudo rm -rf /etc/resolver/dev
  else
    echo "DNSMasq is not installed"
  fi

  #####################################
  # Cleaning up HomeBrew dependencies
  #####################################

  brew update && brew cleanup

  exit 0
}

function link_to_nginx() {
  local path="$(pwd)"
  local project=${path##*/}
  local conf_file="/usr/local/etc/nginx/servers/${project}.conf"

  # Cretae log directory
  mkdir -p "/usr/local/etc/nginx/log/${project}"

cat <<EOM >$conf_file
  server {

      server_name ${project}.dev;
      root ${path}/public;

      error_log  /usr/local/etc/nginx/log/${project}/error.log;
      access_log  /usr/local/etc/nginx/log/${project}/access.log;

      location / {
          try_files \$uri /index.php\$is_args\$args;
      }

      location ~ index.php {
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME \$realpath_root\$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT \$realpath_root;
          fastcgi_read_timeout 300s;
      }
  }
EOM

  sudo brew services restart nginx > /dev/null
  echo "Project ${project} linked"

  exit 0
}

function unlink_from_nginx() {
  local path="$(pwd)"
  local project=${path##*/}
  local conf_file="/usr/local/etc/nginx/servers/${project}.conf"

  if [[ -f "${conf_file}" ]]; then
    rm -rf "${conf_file}"
  fi

  if [[ -f "${conf_file}" ]]; then
    rm -rf "${conf_file}"
  fi

  sudo brew services restart nginx > /dev/null
  echo "Project ${project} was unlinked"

  exit 0
}

while test $# -gt 0; do
  case "$1" in
    --install) install_lemp_stack ;;
    --cleanup) remove_lemp_stack ;;
    --link) link_to_nginx ;;
    --unlink) unlink_from_nginx ;;
    *) print_usage
       exit 1 ;;
  esac
done
